name = "Debugging Tips"
description = "Send debug information in an errored response and to a logging service."
code = """const LOG_URL = 'https://log-service.example.com/' // Service setup up to receive logs
async function handleRequest(event) {
  let response
  try {
    response = await fetch(event.request)
    if (!response.ok) {
      let body = await response.text()
      throw new Error(
        'Bad response at origin. Status: ' + response.status + ' Body: ' + body,
      )
    }
  } catch (err) {
    const stack = JSON.stringify(err.stack) || err
    // Copy the response and initialize body to the stack trace
    response = new Response(stack, response)
    // Shove our rewritten URL into a header to find out what it was.
    response.headers.set('X-Debug-stack', stack)
    response.headers.set('X-Debug-err', err)
    // Without event.waitUntil(), our fetch() to our logging service may
    // or may not complete.
    event.waitUntil(postLog(stack))
  }
  return response
}
addEventListener('fetch', event => {
  event.respondWith(handleRequest(event))
})
function postLog(data) {
  return fetch(LOG_URL, {
    method: 'POST',
    body: data,
  })
}
"""
tags= [ 'Middleware']
demo_url = "https://cloudflareworkers.com/#fa999227c88fad33bc917235c48c11f6:https://bla.cloudflareworkers.com/"
tutorial = "/about/tips/debugging"


