name = "CORS Header Proxy"
description = "Add necessary CORS headers to a third party API response"
code = """async function handleRequest(request) {
  const url = new URL(request.url)
  const apiUrl = url.searchParams.get('apiurl')
  //rewrite request to point to API url
  request = new Request(apiUrl, request)
  request.headers.set('Origin', new URL(apiUrl).origin)
  let response = await fetch(request)
  response = new Response(response.body, response)
  //rewrite cors header
  response.headers.set('Access-Control-Allow-Origin', url.origin)
  //add Vary header so browser will cache response correctly
  let vary = response.headers.get('Vary').split(',')
  //handle headers with weird case
  let vary_lower = vary.map(header => header.toLowerCase())
  if (!vary_lower.includes('origin')) {
    vary.push('Origin')
  }
  response.headers.set('Vary', vary.join(','))
  return response
}
addEventListener('fetch', event => {
  const url = new URL(event.request.url)
  if (url.pathname.startsWith('/corsproxy')) {
    event.respondWith(handleRequest(event.request))
  } else {
    event.respondWith(rawHtmlResponse(demoPage))
  }
})
const apiUrl = 'http://workers-tooling.cf/demos/demoapi'
async function rawHtmlResponse(html) {
  const init = {
    headers: {
      'content-type': 'text/html;charset=UTF-8',
    },
  }
  return new Response(html, init)
}
const demoPage = `
<!DOCTYPE html>
<html>
<body>
  <div>
    <h1>API Fetch without CORS Proxy</h1>
    <code id='noproxy'>Waiting</code>
  </div>
  <div>
    <h1>API Fetch with CORS Proxy</h1>
    <code id='proxy'>Waiting</code>
  </div>
  <script>
  noproxy = async () => {
    let response = await fetch('${apiUrl}')
    let body = await response.json()
    return body
  }
  proxy = async () => {
    let response = await fetch(window.location.origin + '/corsproxy/?apiurl=${apiUrl}')
    let body = await response.json()
    return body
  }
  noproxy().then(data => { 
    document.getElementById('noproxy').innerHTML = data
  }).catch(e => {
    document.getElementById('noproxy').innerHTML = e
  })
  proxy().then(data => {
    document.getElementById('proxy').innerHTML = JSON.stringify(data)
  }).catch(e => {
    document.getElementById('proxy').innerHTML = e
  })
  </script>
</body>
</html>`
"""
demo_url = "https://cloudflareworkers.com/#55431ed7e3b17e5f0a3a5b9c3089dcd4:http://example.com/"
